# -*- coding: utf-8 -*-
# @FILE    : models.py
# @AUTH    : model_creater

import datetime
{% if app.meta.values.get("import_list") %}
    {% for import in app.meta.values.get("import_list") %}
import {{import.name}}
    {% endfor %}
{% endif %}
from umongo import Instance, Document, fields
from dao.manager.manager_umongo_motor import NAME_DICT
from ..BaseModel import BaseModelDocument
from . import consts
from settings import instance

{% for klass in app.klasses %}

@instance.register
    {% if klass.meta.values.get("parent") %}
class {{klass.name}}({{klass.meta.values.get("parent") | title}}):
    {% else %}
class {{klass.name}}(BaseModelDocument):
    {% endif %}
        {% for field in klass.fields %}
        {% if field.field_type == "datetime" %}
    {{field.name}} = fields.DateTimeField({{field|get_model_params(klass)}})
        {% elif field.field_type == "str" %}
    {{field.name}} = fields.StringField({{field|get_model_params(klass)}})
        {% elif field.field_type == "int" %}
    {{field.name}} = fields.IntField({{field|get_model_params(klass)}})
        {% elif field.field_type == "list" %}
    {{field.name}} = fields.ListField({{field|get_model_params(klass)}})
        {% elif field.field_type == "dict" %}
    {{field.name}} = fields.DictField({{field|get_model_params(klass)}})
        {% elif field.field_type == "boolean" %}
    {{field.name}} = fields.BooleanField({{field|get_model_params(klass)}})
        {% elif field.field_type == "objectid" %}
    {{field.name}} = fields.ObjectIdField({{field|get_model_params(klass)}})
        {% else %}
    {{field.name}} = fields.StringField({{field|get_model_params(klass)}})
        {% endif %}
        {% endfor %}
        {% if klass.meta.values %}

    class Meta:
            {% if klass.meta.values.get("index_list") %}
        indexes = [
                {% for index in klass.meta.values.get("index_list") %}
            {
                'key': [{{index | get_index_params}}],
                    {% if index["is_uniq"] %}
                'unique': True,
                    {% endif %}
            },
                {% endfor %}
        ]
            {% endif %}
            {% if klass.meta.values.get("allow_inheritance") %}
        allow_inheritance = True
            {% endif %}
        pass
        {% endif %}

{% endfor %}

{% for klass in app.klasses %}
NAME_DICT["{{klass.name}}"] = {{klass.name}}
{% endfor %}